import telebot
import config
import random
from telebot import types

bot = telebot.TeleBot(config.TOKEN)

Button1 = types.KeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è‚úÖ")
Button2 = types.KeyboardButton("–û—Ç–ø–∏—Å–∞—Ç—å—Å—èüö´")
Button3 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É\n–ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–ºüïπ‚öíüíµ")
Button4 = types.KeyboardButton("STOPüö´")
Button5 = types.KeyboardButton("Admin")
Button6 = types.KeyboardButton("–í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞‚úÖ")
Button7 = types.KeyboardButton('–û—Ç–≤–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫—É‚úèÔ∏è")
Button8 = types.KeyboardButton("–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–πüóë")
Button9 = types.KeyboardButton("–ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê üîÅ")
Button10 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –í–°–ï–ú‚úèÔ∏è")
Button11 = types.KeyboardButton("–°–¢–ê–¢–ò–°–¢–ò–ö–êüìä")
Button12 = types.KeyboardButton("–ß–µ–º –ø–æ–º–æ–∂–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?üåü")
Button13 = types.KeyboardButton("–†–ê–ó–ë–û–† –í–ê–®–ï–ì–û –ü–†–û–§–ò–õ–Øü§©")
Button14 = types.KeyboardButton("–ü–û–õ–£–ß–ò–¢–¨ –ö–£–†–°üíé")

stop = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(Button4)
start = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(Button2, Button1).row(Button14).row(Button13).row(Button12).row(Button3)
adminon = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(Button9, Button7).row(Button8).row(Button10).row(Button11)



@bot.message_handler(commands=['start'])
def welcome(message):
	if message.chat.type == 'private':
		sti = open('static/welcome.webp', 'rb')
		bot.send_sticker(message.chat.id, sti)

	# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
       
	types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.InlineKeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ", callback_data='dad')
	item2 = types.InlineKeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?", callback_data='pop')

	markup.add(item1, item2)

	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(message.from_user, bot.get_me()),
		parse_mode='html', reply_markup=markup)
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'dad':
				bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
			elif call.data == 'pop':
				bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

			# remove inline buttons
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
				reply_markup=None)

			# show alert
			bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
				text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
@bot.message_handler(content_types=['text'])
def lalala(message):
	if message.chat.type == 'private':
		if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
			bot.send_message(message.chat.id, str(random.randint(0,100)))
		elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
			item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

			markup.add(item1, item2)

			bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
		else:
			bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'good':
				bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
			elif call.data == 'bad':
				bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

			# remove inline buttons
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
				reply_markup=None)

			# show alert
			bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
				text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

	except Exception as e:
		print(repr(e))

# RUN
bot.polling(none_stop=True)
